# Enterprise Deployment Configuration
# Deployment Orchestration Domain Configuration with NASA POT10 Compliance

version: "1.0.0"
metadata:
  name: "Enterprise Deployment Configuration"
  description: "Comprehensive deployment orchestration configuration for enterprise environments"
  compliance_level: "nasa-pot10"
  created: "2024-01-15T10:00:00Z"
  updated: "2024-01-15T10:00:00Z"

# Global deployment settings
global:
  timeout: 1800000  # 30 minutes default timeout
  retry_policy:
    max_retries: 3
    backoff_strategy: "exponential"
    initial_delay: 5000
    max_delay: 60000

  monitoring:
    enabled: true
    health_check_interval: 30
    metrics_collection_interval: 15
    alert_thresholds:
      error_rate: 5.0
      response_time: 2000
      availability: 95.0

  compliance:
    audit_logging: true
    approval_required: true
    change_tracking: true
    documentation_required: true

# Environment-specific configurations
environments:
  development:
    type: "development"
    compliance_level: "basic"

    platform_defaults:
      kubernetes:
        cluster: "dev-cluster"
        namespace: "development"
        context: "dev-context"
      docker:
        registry: "dev-registry.example.com"
        network: "dev-network"
      serverless:
        stage: "dev"
        region: "us-east-1"

    resource_limits:
      cpu: "2 cores"
      memory: "4 GB"
      storage: "10 GB"
      replicas: 1

    deployment_strategies:
      default: "rolling"
      allowed: ["rolling", "recreate"]

    feature_flags:
      debug_mode: true
      verbose_logging: true
      performance_profiling: true
      auto_rollback: true

    security:
      tls_required: false
      network_policies: false
      rbac_required: false
      secret_encryption: true

    approval_workflow:
      required: false
      approvers: ["dev-team"]

  staging:
    type: "staging"
    compliance_level: "enhanced"

    platform_defaults:
      kubernetes:
        cluster: "staging-cluster"
        namespace: "staging"
        context: "staging-context"
      docker:
        registry: "staging-registry.example.com"
        network: "staging-network"
      serverless:
        stage: "staging"
        region: "us-east-1"

    resource_limits:
      cpu: "4 cores"
      memory: "8 GB"
      storage: "25 GB"
      replicas: 2

    deployment_strategies:
      default: "blue-green"
      allowed: ["blue-green", "canary", "rolling"]

    feature_flags:
      debug_mode: false
      verbose_logging: false
      performance_profiling: true
      auto_rollback: true
      monitoring_enhanced: true

    security:
      tls_required: true
      network_policies: true
      rbac_required: true
      secret_encryption: true
      vulnerability_scanning: true

    approval_workflow:
      required: true
      approvers: ["staging-team", "qa-team"]
      timeout: 86400000  # 24 hours

  production:
    type: "production"
    compliance_level: "nasa-pot10"

    platform_defaults:
      kubernetes:
        cluster: "prod-cluster"
        namespace: "production"
        context: "prod-context"
        node_selector:
          environment: "production"
          instance-type: "high-performance"
      docker:
        registry: "prod-registry.example.com"
        network: "prod-network"
      serverless:
        stage: "prod"
        region: "us-east-1"
        reserved_concurrency: 100

    resource_limits:
      cpu: "8 cores"
      memory: "16 GB"
      storage: "100 GB"
      replicas: 5

    deployment_strategies:
      default: "blue-green"
      allowed: ["blue-green", "canary"]
      forbidden: ["recreate", "rolling"]

    feature_flags:
      debug_mode: false
      verbose_logging: false
      performance_profiling: false
      auto_rollback: true
      monitoring_enhanced: true
      compliance_validation: true
      audit_all_actions: true

    security:
      tls_required: true
      network_policies: true
      rbac_required: true
      secret_encryption: true
      vulnerability_scanning: true
      penetration_testing: true
      compliance_scanning: true
      access_logging: true

    approval_workflow:
      required: true
      approvers: ["prod-team", "security-team", "compliance-team"]
      timeout: 172800000  # 48 hours
      emergency_override: false

# Deployment strategy configurations
deployment_strategies:
  rolling:
    type: "rolling"
    timeout: 300000
    max_surge: "25%"
    max_unavailable: "25%"
    health_check_delay: 30000
    health_check_timeout: 10000
    health_check_interval: 5000
    progress_deadline_seconds: 600
    rollback_on_failure: true

    monitoring:
      metrics_collection: true
      health_monitoring: true
      performance_tracking: true

    compliance:
      audit_required: false
      approval_required: false

  blue_green:
    type: "blue-green"
    timeout: 600000
    switch_traffic_percentage: 100
    validation_duration: 300000
    auto_switch: false
    health_check_delay: 30000
    health_check_timeout: 10000
    health_check_interval: 5000
    progress_deadline_seconds: 600

    switch_triggers:
      - type: "health"
        condition:
          metric: "health_status"
          operator: "eq"
          value: "healthy"
          duration: 300000
        action: "switch"

      - type: "metrics"
        condition:
          metric: "error_rate"
          operator: "lt"
          value: 1.0
          duration: 300000
        action: "switch"

      - type: "manual"
        action: "switch"

    monitoring:
      metrics_collection: true
      health_monitoring: true
      performance_tracking: true
      traffic_monitoring: true

    compliance:
      audit_required: true
      approval_required: true

  canary:
    type: "canary"
    timeout: 1800000
    initial_traffic_percentage: 10
    step_percentage: 25
    step_duration: 300000
    max_steps: 4

    success_threshold:
      error_rate: 1.0
      response_time: 500
      availability: 99.5
      throughput: 100

    failure_threshold:
      error_rate: 5.0
      response_time: 2000
      availability: 95.0
      consecutive_failures: 3

    health_check_delay: 30000
    health_check_timeout: 10000
    health_check_interval: 5000
    progress_deadline_seconds: 1800

    monitoring:
      metrics_collection: true
      health_monitoring: true
      performance_tracking: true
      traffic_monitoring: true
      advanced_analytics: true

    compliance:
      audit_required: true
      approval_required: true

# Platform-specific configurations
platforms:
  kubernetes:
    supported_versions: ["v1.26", "v1.27", "v1.28", "v1.29"]

    features:
      blue_green_support: true
      canary_support: true
      auto_scaling: true
      load_balancing: true
      secret_management: true
      rolling_updates: true
      health_checks: true
      monitoring: true

    security:
      network_policies: true
      pod_security_policies: true
      rbac: true
      service_accounts: true
      secrets_encryption: true

    monitoring:
      prometheus: true
      grafana: true
      jaeger: true
      fluentd: true

    compliance:
      resource_quotas: true
      limit_ranges: true
      security_contexts: true
      admission_controllers: true

  docker:
    supported_versions: ["20.10", "23.0", "24.0"]

    features:
      blue_green_support: true
      canary_support: false
      auto_scaling: false
      load_balancing: false
      secret_management: true
      rolling_updates: false
      health_checks: true
      monitoring: false

    security:
      image_scanning: true
      user_namespaces: true
      seccomp_profiles: true
      apparmor_profiles: true

    monitoring:
      docker_stats: true
      container_logs: true

    compliance:
      image_validation: true
      runtime_security: true

  serverless:
    supported_providers: ["aws", "azure", "gcp"]

    aws:
      services: ["lambda", "fargate", "api-gateway"]
      regions: ["us-east-1", "us-west-2", "eu-west-1"]

    features:
      blue_green_support: true
      canary_support: true
      auto_scaling: true
      load_balancing: true
      secret_management: true
      rolling_updates: false
      health_checks: false
      monitoring: true

    security:
      iam_roles: true
      vpc_configuration: true
      encryption: true

    monitoring:
      cloudwatch: true
      x_ray: true

    compliance:
      function_validation: true
      cost_optimization: true

  vm:
    supported_platforms: ["vmware", "hyper-v", "kvm"]

    features:
      blue_green_support: false
      canary_support: false
      auto_scaling: false
      load_balancing: false
      secret_management: false
      rolling_updates: false
      health_checks: true
      monitoring: false

    security:
      host_hardening: true
      antivirus: true
      patch_management: true

    monitoring:
      system_metrics: true
      log_collection: true

    compliance:
      configuration_management: true
      vulnerability_scanning: true

# Rollback configuration
rollback:
  global:
    enabled: true
    auto_triggers:
      - type: "health-failure"
        threshold: 3
        duration: 180000
        severity: "high"

      - type: "error-rate"
        threshold: 10.0
        duration: 300000
        severity: "critical"

      - type: "performance-degradation"
        threshold: 5000
        duration: 300000
        severity: "high"

    manual_approval_required: false
    preserve_resource_version: true

  environment_overrides:
    production:
      manual_approval_required: true
      auto_triggers:
        - type: "health-failure"
          threshold: 1
          duration: 60000
          severity: "critical"

        - type: "error-rate"
          threshold: 5.0
          duration: 120000
          severity: "high"

# Compliance and audit configuration
compliance:
  nasa_pot10:
    enabled: true
    requirements:
      - "POT10-001: Software Configuration Management"
      - "POT10-002: Software Safety"
      - "POT10-003: Documentation Standards"
      - "POT10-004: Verification and Validation"
      - "POT10-005: Quality Assurance"

    validation_checks:
      - "artifact_integrity"
      - "security_scanning"
      - "approval_workflows"
      - "audit_logging"
      - "change_management"
      - "configuration_management"
      - "compliance_documentation"

    documentation_requirements:
      - "deployment_plan"
      - "risk_assessment"
      - "test_results"
      - "approval_records"
      - "deployment_log"
      - "rollback_plan"

    audit_retention: "7 years"
    reporting_frequency: "monthly"

  enhanced:
    enabled: true
    requirements:
      - "security_scanning"
      - "access_control"
      - "monitoring_configuration"
      - "rollback_capability"

    validation_checks:
      - "artifact_integrity"
      - "security_scanning"
      - "access_control"
      - "monitoring_configuration"

    documentation_requirements:
      - "deployment_summary"
      - "test_results"
      - "monitoring_setup"

    audit_retention: "2 years"
    reporting_frequency: "quarterly"

  basic:
    enabled: true
    requirements:
      - "artifact_integrity"
      - "resource_limits"
      - "health_checks"

    validation_checks:
      - "artifact_integrity"
      - "resource_limits"
      - "health_checks"

    documentation_requirements:
      - "basic_deployment_log"

    audit_retention: "1 year"
    reporting_frequency: "annually"

# Integration configuration
integrations:
  phase3_artifacts:
    enabled: true
    repository: "enterprise-registry"
    validation:
      integrity_checks: true
      security_scanning: true
      compliance_validation: true
      metadata_tracking: true

    artifact_types:
      - "container_images"
      - "helm_charts"
      - "lambda_packages"
      - "vm_templates"

    retention_policy:
      development: "30 days"
      staging: "90 days"
      production: "7 years"

  enterprise_config:
    enabled: true
    config_source: "enterprise_config.yaml"
    validation:
      schema_validation: true
      policy_compliance: true
      security_validation: true

    update_strategy: "rolling"
    change_approval_required: true

  monitoring:
    prometheus:
      enabled: true
      scrape_interval: "15s"
      retention: "30d"

    grafana:
      enabled: true
      dashboards:
        - "deployment-overview"
        - "environment-health"
        - "compliance-status"

    alerting:
      enabled: true
      channels:
        - "slack"
        - "email"
        - "pagerduty"

# Performance and optimization
performance:
  global:
    overhead_budget: 0.2  # 0.2% maximum performance impact
    concurrent_deployments: 10
    resource_pooling: true
    caching:
      enabled: true
      ttl: 3600  # 1 hour

  optimization:
    artifact_caching: true
    parallel_operations: true
    connection_pooling: true
    batch_processing: true

  monitoring:
    performance_tracking: true
    bottleneck_detection: true
    resource_usage_monitoring: true
    latency_monitoring: true

# Notification and alerting
notifications:
  channels:
    slack:
      webhook_url: "${SLACK_WEBHOOK_URL}"
      channels:
        development: "#dev-deployments"
        staging: "#staging-deployments"
        production: "#prod-deployments"

    email:
      smtp_server: "mail.example.com"
      recipients:
        critical: ["ops-team@example.com", "security-team@example.com"]
        warning: ["dev-team@example.com"]
        info: ["deployment-notifications@example.com"]

    pagerduty:
      service_key: "${PAGERDUTY_SERVICE_KEY}"
      escalation_policy: "deployment-incidents"

  events:
    deployment_start: ["info"]
    deployment_success: ["info"]
    deployment_failure: ["critical"]
    rollback_triggered: ["warning"]
    compliance_violation: ["critical"]
    security_incident: ["critical"]

# Logging configuration
logging:
  level: "INFO"
  format: "json"

  outputs:
    - type: "file"
      path: "/var/log/deployment-orchestration.log"
      rotation: "daily"
      retention: "30d"

    - type: "elasticsearch"
      endpoint: "https://elasticsearch.example.com"
      index: "deployment-logs"

    - type: "cloudwatch"
      log_group: "/aws/deployment-orchestration"
      region: "us-east-1"

  compliance:
    audit_logging: true
    pii_masking: true
    encryption_at_rest: true
    retention_policy: "7 years"