{
  "name": "SPARC Full Pipeline",
  "version": "1.0.0",
  "description": "Complete SPARC methodology pipeline from specification to production",
  "steps": [
    {
      "id": "1-research",
      "name": "Research Existing Solutions",
      "command": "sparc research",
      "agents": ["researcher", "researcher-gemini"],
      "inputs": ["requirements.md"],
      "outputs": ["research-findings.md", "existing-solutions.json"],
      "validation": {
        "required": ["market analysis", "technical research", "feasibility study"]
      },
      "parallel": true
    },
    {
      "id": "2-specification",
      "name": "Define Comprehensive Specifications",
      "command": "sparc spec",
      "agents": ["specification", "planner"],
      "inputs": ["requirements.md", "research-findings.md"],
      "outputs": ["SPEC.md", "acceptance-criteria.json", "success-metrics.json"],
      "validation": {
        "required": ["functional requirements", "non-functional requirements", "constraints", "acceptance criteria"]
      }
    },
    {
      "id": "3-architecture",
      "name": "Design System Architecture",
      "command": "sparc architect",
      "agents": ["architecture", "system-architect", "arch-system-design"],
      "inputs": ["SPEC.md"],
      "outputs": ["architecture.md", "system-design.json", "component-diagram.svg"],
      "validation": {
        "required": ["high-level design", "component breakdown", "data flow", "integration points"]
      }
    },
    {
      "id": "4-pseudocode",
      "name": "Algorithm Design & Pseudocode",
      "command": "sparc pseudocode",
      "agents": ["pseudocode", "architect"],
      "inputs": ["SPEC.md", "architecture.md"],
      "outputs": ["algorithms.md", "pseudocode/", "complexity-analysis.json"],
      "validation": {
        "required": ["core algorithms", "complexity analysis", "optimization strategies"]
      }
    },
    {
      "id": "5-test-planning",
      "name": "Test Strategy & Planning",
      "command": "sparc test-plan",
      "agents": ["tester", "tdd-london-swarm"],
      "inputs": ["SPEC.md", "architecture.md"],
      "outputs": ["test-strategy.md", "test-cases.json", "coverage-targets.json"],
      "validation": {
        "required": ["test strategy", "test cases", "coverage targets >= 80%"]
      }
    },
    {
      "id": "6-implementation",
      "name": "Core Implementation",
      "command": "sparc coder",
      "agents": ["coder", "sparc-coder", "implementer-sparc-coder"],
      "inputs": ["SPEC.md", "architecture.md", "pseudocode/"],
      "outputs": ["src/", "implementation-notes.md"],
      "validation": {
        "required": ["code implementation", "unit tests", "documentation"]
      },
      "parallel": true,
      "maxAgents": 3
    },
    {
      "id": "7-testing",
      "name": "Comprehensive Testing",
      "command": "sparc test",
      "agents": ["tester", "api-tester", "test-results-analyzer"],
      "inputs": ["src/", "test-cases.json"],
      "outputs": ["test-results/", "coverage-report.html", "test-summary.json"],
      "validation": {
        "required": ["all tests pass", "coverage >= 80%", "no regression"]
      },
      "parallel": true
    },
    {
      "id": "8-security",
      "name": "Security Analysis",
      "command": "sparc security",
      "agents": ["security-manager", "code-analyzer"],
      "inputs": ["src/"],
      "outputs": ["security-report.json", "vulnerability-scan.json"],
      "validation": {
        "required": ["zero critical issues", "zero high issues", "OWASP compliance"]
      }
    },
    {
      "id": "9-performance",
      "name": "Performance Optimization",
      "command": "sparc optimize",
      "agents": ["perf-analyzer", "performance-benchmarker", "workflow-optimizer"],
      "inputs": ["src/", "test-results/"],
      "outputs": ["performance-report.json", "benchmarks/", "optimization-log.md"],
      "validation": {
        "required": ["performance baseline", "no regression", "optimization applied"]
      }
    },
    {
      "id": "10-review",
      "name": "Comprehensive Code Review",
      "command": "sparc review",
      "agents": ["reviewer", "code-analyzer", "fresh-eyes-codex"],
      "inputs": ["src/", "test-results/", "security-report.json"],
      "outputs": ["review-report.md", "quality-metrics.json", "approved-for-merge.json"],
      "validation": {
        "required": ["code quality pass", "review approved", "no blockers"]
      }
    },
    {
      "id": "11-theater-detection",
      "name": "Theater Detection & Reality Validation",
      "command": "sparc theater-detect",
      "agents": ["theater-killer", "reality-checker", "production-validator"],
      "inputs": ["src/", "test-results/", "review-report.md"],
      "outputs": ["theater-report.json", "reality-validation.json", "genuine-improvements.json"],
      "validation": {
        "required": ["zero theater patterns", "real functionality confirmed", "genuine quality verified"]
      }
    },
    {
      "id": "12-documentation",
      "name": "Complete Documentation",
      "command": "sparc document",
      "agents": ["docs-api-openapi", "content-creator"],
      "inputs": ["src/", "SPEC.md", "architecture.md"],
      "outputs": ["docs/", "API.md", "README.md", "CHANGELOG.md"],
      "validation": {
        "required": ["API documentation", "user guide", "developer guide", "changelog"]
      }
    },
    {
      "id": "13-integration",
      "name": "System Integration",
      "command": "sparc integration",
      "agents": ["tester", "api-tester"],
      "inputs": ["src/", "test-results/"],
      "outputs": ["integration-report.json", "e2e-results.json", "smoke-test.json"],
      "validation": {
        "required": ["integration pass", "e2e pass", "smoke test pass"]
      }
    },
    {
      "id": "14-deployment-prep",
      "name": "Deployment Preparation",
      "command": "sparc deploy-prep",
      "agents": ["cicd-engineer", "ops-cicd-github"],
      "inputs": ["src/", "docs/"],
      "outputs": ["deployment-config/", "ci-cd-pipeline.yml", "docker/"],
      "validation": {
        "required": ["CI/CD configured", "containers built", "deployment scripts"]
      }
    },
    {
      "id": "15-final-validation",
      "name": "Production Validation",
      "command": "sparc validate",
      "agents": ["production-validator", "completion-auditor"],
      "inputs": ["*"],
      "outputs": ["production-readiness.json", "completion-report.md", "sign-off.json"],
      "validation": {
        "required": ["all quality gates pass", "production ready", "stakeholder approval"]
      }
    }
  ],
  "qualityGates": {
    "coverage": {
      "threshold": 80,
      "enforcement": "strict"
    },
    "security": {
      "criticalIssues": 0,
      "highIssues": 0,
      "enforcement": "strict"
    },
    "performance": {
      "regression": "not-allowed",
      "baseline": "maintain-or-improve"
    },
    "theater": {
      "tolerance": "zero",
      "validation": "mandatory"
    },
    "documentation": {
      "completeness": 100,
      "accuracy": "verified"
    },
    "nasa": {
      "pot10Compliance": 90,
      "enforcement": "required"
    }
  },
  "parallelization": {
    "enabled": true,
    "maxConcurrent": 5,
    "strategy": "adaptive"
  },
  "rollback": {
    "enabled": true,
    "triggers": ["quality-gate-failure", "test-failure", "security-issue"],
    "strategy": "checkpoint-restore",
    "checkpoints": ["after-spec", "after-architecture", "after-implementation", "after-testing"]
  },
  "monitoring": {
    "realtime": true,
    "metrics": ["progress", "quality", "performance", "resource-usage"],
    "alerts": ["failure", "degradation", "timeout", "quality-drop"]
  },
  "artifacts": {
    "retention": "30-days",
    "format": "structured",
    "storage": ".roo/artifacts/pipeline/"
  }
}