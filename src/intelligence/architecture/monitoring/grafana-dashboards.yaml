# Gary×Taleb Trading System - Grafana Dashboards Configuration
# Real-time trading performance and system monitoring dashboards

apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards-config
  namespace: gary-taleb-monitoring
  labels:
    grafana_dashboard: "true"
data:
  # Trading Performance Dashboard
  trading-performance-dashboard.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Gary×Taleb Trading Performance",
        "tags": ["trading", "performance", "real-time"],
        "style": "dark",
        "timezone": "UTC",
        "refresh": "1s",
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "panels": [
          {
            "id": 1,
            "title": "Order Execution Latency (P95)",
            "type": "stat",
            "targets": [
              {
                "expr": "histogram_quantile(0.95, rate(execution_latency_seconds_bucket[1m]) * 1000)",
                "legendFormat": "P95 Latency (ms)",
                "refId": "A"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "thresholds"
                },
                "thresholds": {
                  "steps": [
                    {"color": "green", "value": null},
                    {"color": "yellow", "value": 10},
                    {"color": "red", "value": 15}
                  ]
                },
                "unit": "ms"
              }
            },
            "gridPos": {"h": 8, "w": 6, "x": 0, "y": 0}
          },
          {
            "id": 2,
            "title": "Orders per Second",
            "type": "stat",
            "targets": [
              {
                "expr": "rate(orders_processed_total[1m])",
                "legendFormat": "Orders/sec",
                "refId": "A"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {"mode": "palette-classic"},
                "unit": "ops"
              }
            },
            "gridPos": {"h": 8, "w": 6, "x": 6, "y": 0}
          },
          {
            "id": 3,
            "title": "Portfolio P&L",
            "type": "stat",
            "targets": [
              {
                "expr": "portfolio_unrealized_pnl_usd",
                "legendFormat": "Unrealized P&L",
                "refId": "A"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "thresholds"
                },
                "thresholds": {
                  "steps": [
                    {"color": "red", "value": null},
                    {"color": "yellow", "value": 0},
                    {"color": "green", "value": 1000}
                  ]
                },
                "unit": "currencyUSD"
              }
            },
            "gridPos": {"h": 8, "w": 6, "x": 12, "y": 0}
          },
          {
            "id": 4,
            "title": "Market Data Latency",
            "type": "stat",
            "targets": [
              {
                "expr": "histogram_quantile(0.95, rate(market_data_ingestion_latency_seconds_bucket[1m]) * 1000)",
                "legendFormat": "Data Latency (ms)",
                "refId": "A"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "thresholds"
                },
                "thresholds": {
                  "steps": [
                    {"color": "green", "value": null},
                    {"color": "yellow", "value": 5},
                    {"color": "red", "value": 10}
                  ]
                },
                "unit": "ms"
              }
            },
            "gridPos": {"h": 8, "w": 6, "x": 18, "y": 0}
          },
          {
            "id": 5,
            "title": "Execution Latency Over Time",
            "type": "timeseries",
            "targets": [
              {
                "expr": "histogram_quantile(0.50, rate(execution_latency_seconds_bucket[1m]) * 1000)",
                "legendFormat": "P50",
                "refId": "A"
              },
              {
                "expr": "histogram_quantile(0.95, rate(execution_latency_seconds_bucket[1m]) * 1000)",
                "legendFormat": "P95",
                "refId": "B"
              },
              {
                "expr": "histogram_quantile(0.99, rate(execution_latency_seconds_bucket[1m]) * 1000)",
                "legendFormat": "P99",
                "refId": "C"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {"mode": "palette-classic"},
                "unit": "ms"
              }
            },
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 8}
          },
          {
            "id": 6,
            "title": "Order Fill Rate",
            "type": "timeseries",
            "targets": [
              {
                "expr": "rate(orders_filled_total[1m]) / rate(orders_submitted_total[1m]) * 100",
                "legendFormat": "Fill Rate %",
                "refId": "A"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {"mode": "palette-classic"},
                "unit": "percent",
                "min": 0,
                "max": 100
              }
            },
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 8}
          }
        ]
      }
    }

  # System Performance Dashboard
  system-performance-dashboard.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Gary×Taleb System Performance",
        "tags": ["system", "performance", "infrastructure"],
        "style": "dark",
        "timezone": "UTC",
        "refresh": "5s",
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "panels": [
          {
            "id": 1,
            "title": "CPU Usage by Service",
            "type": "timeseries",
            "targets": [
              {
                "expr": "rate(container_cpu_usage_seconds_total{container!=\"\"}[1m]) * 100",
                "legendFormat": "{{container}}",
                "refId": "A"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {"mode": "palette-classic"},
                "unit": "percent"
              }
            },
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0}
          },
          {
            "id": 2,
            "title": "Memory Usage by Service",
            "type": "timeseries",
            "targets": [
              {
                "expr": "container_memory_usage_bytes{container!=\"\"} / 1024 / 1024 / 1024",
                "legendFormat": "{{container}}",
                "refId": "A"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {"mode": "palette-classic"},
                "unit": "decgbytes"
              }
            },
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 0}
          },
          {
            "id": 3,
            "title": "GPU Utilization",
            "type": "timeseries",
            "targets": [
              {
                "expr": "DCGM_FI_DEV_GPU_UTIL",
                "legendFormat": "GPU {{gpu}}",
                "refId": "A"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {"mode": "palette-classic"},
                "unit": "percent",
                "min": 0,
                "max": 100
              }
            },
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 8}
          },
          {
            "id": 4,
            "title": "Network I/O",
            "type": "timeseries",
            "targets": [
              {
                "expr": "rate(container_network_receive_bytes_total[1m]) / 1024 / 1024",
                "legendFormat": "RX {{container}}",
                "refId": "A"
              },
              {
                "expr": "rate(container_network_transmit_bytes_total[1m]) / 1024 / 1024",
                "legendFormat": "TX {{container}}",
                "refId": "B"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {"mode": "palette-classic"},
                "unit": "decMbytes"
              }
            },
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 8}
          }
        ]
      }
    }

  # Market Data Dashboard
  market-data-dashboard.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Market Data Analytics",
        "tags": ["market-data", "trading", "real-time"],
        "style": "dark",
        "timezone": "UTC",
        "refresh": "1s",
        "time": {
          "from": "now-15m",
          "to": "now"
        },
        "panels": [
          {
            "id": 1,
            "title": "Message Ingestion Rate",
            "type": "timeseries",
            "targets": [
              {
                "expr": "rate(market_data_messages_total[1m])",
                "legendFormat": "{{exchange}} - {{symbol}}",
                "refId": "A"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {"mode": "palette-classic"},
                "unit": "ops"
              }
            },
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0}
          },
          {
            "id": 2,
            "title": "WebSocket Connections",
            "type": "stat",
            "targets": [
              {
                "expr": "websocket_connections_active",
                "legendFormat": "Active Connections",
                "refId": "A"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {"mode": "palette-classic"},
                "unit": "short"
              }
            },
            "gridPos": {"h": 8, "w": 6, "x": 12, "y": 0}
          },
          {
            "id": 3,
            "title": "Data Quality Score",
            "type": "stat",
            "targets": [
              {
                "expr": "(1 - rate(market_data_messages_dropped_total[1m]) / rate(market_data_messages_total[1m])) * 100",
                "legendFormat": "Quality %",
                "refId": "A"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "thresholds"
                },
                "thresholds": {
                  "steps": [
                    {"color": "red", "value": null},
                    {"color": "yellow", "value": 95},
                    {"color": "green", "value": 99}
                  ]
                },
                "unit": "percent"
              }
            },
            "gridPos": {"h": 8, "w": 6, "x": 18, "y": 0}
          },
          {
            "id": 4,
            "title": "Market Volatility Index",
            "type": "timeseries",
            "targets": [
              {
                "expr": "market_volatility_index",
                "legendFormat": "{{symbol}}",
                "refId": "A"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {"mode": "palette-classic"},
                "unit": "short"
              }
            },
            "gridPos": {"h": 8, "w": 24, "x": 0, "y": 8}
          }
        ]
      }
    }

  # Gary DPI Analytics Dashboard
  gary-dpi-dashboard.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Gary DPI Analytics",
        "tags": ["dpi", "ai", "patterns", "gpu"],
        "style": "dark",
        "timezone": "UTC",
        "refresh": "2s",
        "time": {
          "from": "now-30m",
          "to": "now"
        },
        "panels": [
          {
            "id": 1,
            "title": "Pattern Detection Rate",
            "type": "stat",
            "targets": [
              {
                "expr": "rate(dpi_patterns_detected_total[1m]) * 60",
                "legendFormat": "Patterns/min",
                "refId": "A"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {"mode": "palette-classic"},
                "unit": "short"
              }
            },
            "gridPos": {"h": 8, "w": 6, "x": 0, "y": 0}
          },
          {
            "id": 2,
            "title": "GPU Memory Usage",
            "type": "stat",
            "targets": [
              {
                "expr": "DCGM_FI_DEV_FB_USED / DCGM_FI_DEV_FB_TOTAL * 100",
                "legendFormat": "GPU Memory %",
                "refId": "A"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "thresholds"
                },
                "thresholds": {
                  "steps": [
                    {"color": "green", "value": null},
                    {"color": "yellow", "value": 70},
                    {"color": "red", "value": 85}
                  ]
                },
                "unit": "percent"
              }
            },
            "gridPos": {"h": 8, "w": 6, "x": 6, "y": 0}
          },
          {
            "id": 3,
            "title": "Inference Latency",
            "type": "stat",
            "targets": [
              {
                "expr": "histogram_quantile(0.95, rate(dpi_inference_duration_seconds_bucket[1m]) * 1000)",
                "legendFormat": "P95 Inference (ms)",
                "refId": "A"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "thresholds"
                },
                "thresholds": {
                  "steps": [
                    {"color": "green", "value": null},
                    {"color": "yellow", "value": 20},
                    {"color": "red", "value": 30}
                  ]
                },
                "unit": "ms"
              }
            },
            "gridPos": {"h": 8, "w": 6, "x": 12, "y": 0}
          },
          {
            "id": 4,
            "title": "Model Accuracy",
            "type": "stat",
            "targets": [
              {
                "expr": "dpi_model_accuracy",
                "legendFormat": "Accuracy %",
                "refId": "A"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "thresholds"
                },
                "thresholds": {
                  "steps": [
                    {"color": "red", "value": null},
                    {"color": "yellow", "value": 80},
                    {"color": "green", "value": 90}
                  ]
                },
                "unit": "percent"
              }
            },
            "gridPos": {"h": 8, "w": 6, "x": 18, "y": 0}
          },
          {
            "id": 5,
            "title": "Pattern Confidence Distribution",
            "type": "histogram",
            "targets": [
              {
                "expr": "dpi_pattern_confidence_bucket",
                "legendFormat": "Confidence",
                "refId": "A"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {"mode": "palette-classic"}
              }
            },
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 8}
          },
          {
            "id": 6,
            "title": "GPU Temperature & Power",
            "type": "timeseries",
            "targets": [
              {
                "expr": "DCGM_FI_DEV_GPU_TEMP",
                "legendFormat": "Temperature °C",
                "refId": "A"
              },
              {
                "expr": "DCGM_FI_DEV_POWER_USAGE / 1000",
                "legendFormat": "Power (kW)",
                "refId": "B"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {"mode": "palette-classic"}
              }
            },
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 8}
          }
        ]
      }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: gary-taleb-monitoring
  labels:
    app: grafana
    component: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
        component: monitoring
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 472
        fsGroup: 472
      containers:
      - name: grafana
        image: grafana/grafana:10.1.0
        ports:
        - name: http
          containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: grafana-secrets
              key: admin-password
        - name: GF_SECURITY_ADMIN_USER
          value: admin
        - name: GF_INSTALL_PLUGINS
          value: "grafana-clock-panel,grafana-simple-json-datasource,grafana-piechart-panel"
        - name: GF_FEATURE_TOGGLES_ENABLE
          value: "ngalert"
        - name: GF_UNIFIED_ALERTING_ENABLED
          value: "true"
        resources:
          requests:
            cpu: "1"
            memory: 2Gi
          limits:
            cpu: "4"
            memory: 8Gi
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: grafana-config
          mountPath: /etc/grafana/grafana.ini
          subPath: grafana.ini
        - name: grafana-provisioning-datasources
          mountPath: /etc/grafana/provisioning/datasources
        - name: grafana-provisioning-dashboards
          mountPath: /etc/grafana/provisioning/dashboards
        - name: grafana-dashboards
          mountPath: /var/lib/grafana/dashboards
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 30
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: grafana-storage-pvc
      - name: grafana-config
        configMap:
          name: grafana-config
      - name: grafana-provisioning-datasources
        configMap:
          name: grafana-datasources
      - name: grafana-provisioning-dashboards
        configMap:
          name: grafana-dashboard-providers
      - name: grafana-dashboards
        configMap:
          name: grafana-dashboards-config

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-storage-pvc
  namespace: gary-taleb-monitoring
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: high-performance-ssd

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: gary-taleb-monitoring
data:
  grafana.ini: |
    [server]
    http_port = 3000
    root_url = https://grafana.gary-taleb.com

    [database]
    type = sqlite3
    path = grafana.db

    [analytics]
    reporting_enabled = false
    check_for_updates = false

    [security]
    disable_gravatar = true
    cookie_secure = true
    cookie_samesite = strict

    [snapshots]
    external_enabled = false

    [users]
    allow_sign_up = false
    auto_assign_org = true
    auto_assign_org_role = Viewer

    [auth.anonymous]
    enabled = false

    [alerting]
    enabled = false

    [unified_alerting]
    enabled = true

    [feature_toggles]
    enable = ngalert

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: gary-taleb-monitoring
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus-service:9090
        isDefault: true
        editable: false
        jsonData:
          timeInterval: "1s"
          queryTimeout: "60s"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-providers
  namespace: gary-taleb-monitoring
data:
  dashboards.yaml: |
    apiVersion: 1
    providers:
      - name: 'default'
        orgId: 1
        folder: 'Trading System'
        type: file
        disableDeletion: false
        updateIntervalSeconds: 10
        allowUiUpdates: true
        options:
          path: /var/lib/grafana/dashboards

---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: gary-taleb-monitoring
  labels:
    app: grafana
    component: monitoring
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    name: http
  selector:
    app: grafana

---
apiVersion: v1
kind: Secret
metadata:
  name: grafana-secrets
  namespace: gary-taleb-monitoring
type: Opaque
data:
  admin-password: YWRtaW5fcGFzc3dvcmRfY2hhbmdlX2luX3Byb2R1Y3Rpb24=  # admin_password_change_in_production